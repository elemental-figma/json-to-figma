# name: Merge

# on:
#   pull_request:
#     types:
#       - closed
#     branches:
#       - main  # Only trigger on merges to the main branch

# env:
#   FIGMA_WEB_AUTHN_TOKEN: ${{ secrets.FIGMA_WEB_AUTHN_TOKEN }}

# permissions:
#   id-token: write
#   contents: write

# jobs:
#   publish:
#     environment: PRODUCTION
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Use Node.js 18.x
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#           cache: 'npm'
#       - name: Get next Figma release version
#         if: github.event.pull_request.merged && contains(github.event.pull_request.title, 'Update Changelog')
#         id: get-figma-release-version
#         run: |
#           echo "PR_VERSION=$(node -p "require('./package.json').figma.version")" >> "$GITHUB_OUTPUT"
#       - name: Get currently published version
#         if: github.event.pull_request.merged && contains(github.event.pull_request.title, 'Update Changelog')
#         id: get-published-version
#         run: |
#           echo "CURRENT_VERSION=$(npx figcd current-version | sed 's/[^0-9]*\([0-9]*$\)/\1/' | grep -o '[0-9]\+')" >> "$GITHUB_OUTPUT"
#       - name: Version comparison for conditional release
#         if: github.event.pull_request.merged && contains(github.event.pull_request.title, 'Update Changelog')
#         id: version_check
#         env:
#           PR_VERSION: ${{ steps.get-figma-release-version.outputs.PR_VERSION }}
#           CURRENT_VERSION: ${{ steps.get-published-version.outputs.CURRENT_VERSION }}
#         run: |
#           if [ "$((10#$PR_VERSION))" -gt "$((10#$CURRENT_VERSION))" ]; then
#             echo "versions_differ=true" >> "$GITHUB_ENV"
#           else
#             echo "versions_differ=false" >> "$GITHUB_ENV"
#             exit 0
#           fi
#       - name: Install dependencies
#         if: env.versions_differ == 'true'
#         run: |
#           npm ci
#       - name: Build plugin
#         if: env.versions_differ == 'true'
#         run: |
#           npm run build
#       - name: Publish plugin
#         if: env.versions_differ == 'true'
#         run: |
#           npx figcd release -rn 'ui improvements'
#       # - name: Set next Figma version as Figma version in package.json
#       #   run: |
#       #     node scripts/prepare.js
